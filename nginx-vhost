ssl_certificate      /etc/ssl/certs/your.crt;
ssl_certificate_key  /etc/ssl/private/your.key;
ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM:!kEDH;

server {
        listen  127.0.0.1:8082;
        server_name example.com;
        return 301 http://www.example.com$request_uri;
}

server {
        listen   127.0.0.1:8082; ## listen for ipv4; this line is default and implied
        root /var/www/example.com;
        server_name www.example.com;

        set_real_ip_from 127.0.0.1;
        real_ip_header X-Forwarded-For;

        location ~ \.php$ {
                include /etc/nginx/fastcgi_params;
                fastcgi_index index.php;
                fastcgi_send_timeout 30;
                fastcgi_read_timeout 30;
                fastcgi_buffers 4 16k;
                fastcgi_buffer_size 16k;
                fastcgi_cache_use_stale timeout;
                fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
                fastcgi_param  QUERY_STRING     $query_string;
                fastcgi_param  REQUEST_METHOD   $request_method;
                fastcgi_param  CONTENT_TYPE     $content_type;
                fastcgi_param  CONTENT_LENGTH   $content_length;
                fastcgi_intercept_errors on;

                if (-f $request_filename) {
                   fastcgi_pass unix:/var/run/php-fpm.sock;
                }

                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control';
        }
}

server {
        listen  443;
        ssl on;
        server_name example.com;
        return 301 https://www.example.com$request_uri;
}

server {
        listen  443;
        server_name www.example.com;
        ssl on;

        location / {
                proxy_pass      http://127.0.0.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
                proxy_redirect     off;
        }
}
